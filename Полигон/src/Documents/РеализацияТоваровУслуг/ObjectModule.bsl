
Процедура ОбработкаПроведения(Отказ, Режим)
	Движения.Корреспонденция.Очистить();
	Движения.Корреспонденция.Записывать  = Истина;
	Движения.Записать();
	
	Выборка = ПолучитьВыборкуДляФормированияДвижения();
	
	Движения.Корреспонденция.Записывать = Истина;
	Движения.БезКорреспонденции.Записывать = Истина;

	Пока Выборка.Следующий() Цикл
		Если Выборка.Количество > Выборка.КоличествоОстаток Тогда
			Отказ = Истина;
			Сообщение = Новый СообщениеПользователю;
			ТекстСообщения = "Не хватает товара %1. Необходимо %2, в наличии %3.";
			Сообщение.Текст = СтрШаблон(ТекстСообщения, 
										Выборка.Номенклатура, 
										Выборка.Количество, 
										Выборка.КоличествоОстаток);
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Поле = "Товары[" + (Выборка.НомерСтроки - 1) +"].Количество";
			Сообщение.Сообщить(); 
			Продолжить;
		КонецЕсли;  
		
		СформироватьДвиженияПоНоменклатуре(Выборка);
		
	КонецЦикла; 
	
КонецПроцедуры

Функция ПолучитьВыборкуДляФормированияДвижения()
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	               |	СУММА(РеализацияТоваровУслугТовары.Количество) КАК Количество,
	               |	СУММА(РеализацияТоваровУслугТовары.Сумма) КАК Сумма,
	               |	МИНИМУМ(РеализацияТоваровУслугТовары.НомерСтроки) КАК НомерСтроки
	               |ПОМЕСТИТЬ ВТ_ДанныеДокумента
	               |ИЗ
	               |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	               |ГДЕ
	               |	РеализацияТоваровУслугТовары.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РеализацияТоваровУслугТовары.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ДанныеДокумента.Номенклатура КАК Номенклатура,
	               |	ВТ_ДанныеДокумента.Количество КАК Количество,
	               |	ВТ_ДанныеДокумента.Сумма КАК Сумма,
	               |	ЕСТЬNULL(КорреспонденцияОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	               |	ЕСТЬNULL(КорреспонденцияОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	               |	ВТ_ДанныеДокумента.НомерСтроки КАК НомерСтроки
	               |ИЗ
	               |	ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Корреспонденция.Остатки(
	               |				&ДатаДокумента,
	               |				Счет = &Товары,
	               |				,
	               |				Субконто2 В
	               |						(ВЫБРАТЬ
	               |							ВТ_ДанныеДокумента.Номенклатура КАК Номенклатура
	               |						ИЗ
	               |							ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента)
	               |					И Субконто1 = &Склад) КАК КорреспонденцияОстатки
	               |		ПО ВТ_ДанныеДокумента.Номенклатура = КорреспонденцияОстатки.Субконто2";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Товары", ПланыСчетов.Управленческий.Товары);
	Запрос.УстановитьПараметр("ДатаДокумента", МоментВремени()); 
	
	Выборка = Запрос.Выполнить().Выбрать(); 
	
	Возврат Выборка;
	
КонецФункции

Процедура СформироватьДвиженияПоНоменклатуре(Выборка)
	
	Если Выборка.Количество = Выборка.КоличествоОстаток Тогда
		Себестоимость = Выборка.СуммаОстаток;
	Иначе
		Себестоимость = Выборка.СуммаОстаток * Выборка.Количество / Выборка.КоличествоОстаток;
	КонецЕсли;
	
		Движение = Движения.Корреспонденция.Добавить();
		Движение.СчетДт = ПланыСчетов.Управленческий.РасчетыСПокупателями;
		Движение.СчетКт = ПланыСчетов.Управленческий.Товары;
		Движение.Период = Дата;
		Движение.Сумма = Себестоимость;
		Движение.КоличествоКт = Выборка.Количество;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Контрагенты] = Контрагент;
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Склады] = Склад;
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Выборка.Номенклатура;
		
		Движение = Движения.Корреспонденция.Добавить();
		Движение.СчетДт = ПланыСчетов.Управленческий.РасчетыСПокупателями;
		Движение.СчетКт = ПланыСчетов.Управленческий.Выручка;
		Движение.Период = Дата;
		Движение.Сумма = ВЫборка.Сумма - Себестоимость;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Контрагенты] = Контрагент;	
		
		Движение = Движения.БезКорреспонденции.Добавить();
		Движение.ВидДвижения = ВидДвиженияБухгалтерии.Кредит;
		Движение.Счет = ПланыСчетов.Управленческий.Товары;
		Движение.Период = Дата;
		Движение.Сумма = Себестоимость;
		Движение.Количество = Выборка.Количество;
		Движение.Субконто[ПланыВидовХарактеристик.ВидыСубконто.Склады] = Склад;
		Движение.Субконто[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Выборка.Номенклатура;
		
		Движение = Движения.БезКорреспонденции.Добавить();
		Движение.ВидДвижения = ВидДвиженияБухгалтерии.Кредит;
		Движение.Счет = ПланыСчетов.Управленческий.Выручка;
		Движение.Период = Дата;
		Движение.Сумма = Выборка.Сумма - Себестоимость;
		
		Движение = Движения.БезКорреспонденции.Добавить();
		Движение.ВидДвижения = ВидДвиженияБухгалтерии.Дебет;
		Движение.Счет = ПланыСчетов.Управленческий.РасчетыСПокупателями;
		Движение.Период = Дата;
		Движение.Сумма = Выборка.Сумма;
		Движение.Субконто[ПланыВидовХарактеристик.ВидыСубконто.Контрагенты] = Контрагент;
				
КонецПроцедуры
























